{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport axios from \"axios\";\nimport Router from \"next/router\";\nimport Link from \"next/link\";\nimport { connect } from \"react-redux\";\nimport OrderSummary from \"./OrderSummary\";\nimport useForm from \"./userForm\"; // get our fontawesome imports\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBitcoin } from \"@fortawesome/free-brands-svg-icons\";\nimport { toast } from \"react-toastify\";\nimport { resetCart } from \"../../store/actions/actions\";\n\nfunction CheckoutForm({\n  total,\n  shipping,\n  products\n}) {\n  function handleOnSubmit(e) {\n    e.preventDefault();\n    let data = {\n      firstName: state.firstName.value,\n      lastName: state.lastName.value,\n      address: state.address.value,\n      city: state.city.value,\n      state: state.state.value,\n      zip: state.zip.value,\n      email: state.email.value,\n      phone: state.phone.value,\n      payment: state.payment.value\n    };\n    let formData = [data, products];\n\n    if (payment == \"\") {\n      toast.success(\"Please Select A Payment Method\", {\n        position: \"top-center\",\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true\n      });\n    } else {}\n\n    ;\n    axios({\n      method: \"POST\",\n      url: \"/api/payment\",\n      data: formData\n    }).then(response => {\n      if (response.data === \"success\") {\n        toast.success(\"Order has been Initiated\", {\n          position: \"top-center\",\n          autoClose: 4000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true\n        });\n        resetCart();\n        setTimeout(function () {\n          Router.push(\"/thankyou\");\n        }, 4000);\n      } else if (response.data === \"badddd\") {\n        toast.success(\"An Error Occurred Please Retry: Did you use a valid email?\", {\n          position: \"top-center\",\n          autoClose: 4000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true\n        });\n      }\n    });\n  }\n\n  function redirect(url) {\n    if (url) return window.open(url, \"_blank\", \"toolbar=yes,scrollbars=yes,resizable=yes,top=500,left=500,width=400,height=700\");\n  }\n\n  let totalAmount = (total + shipping).toFixed(2);\n  const stateSchema = {\n    firstName: {\n      value: \"\",\n      error: \"\"\n    },\n    lastName: {\n      value: \"\",\n      error: \"\"\n    },\n    address: {\n      value: \"\",\n      error: \"\"\n    },\n    city: {\n      value: \"\",\n      error: \"\"\n    },\n    state: {\n      value: \"\",\n      error: \"\"\n    },\n    zip: {\n      value: \"\",\n      error: \"\"\n    },\n    email: {\n      value: \"\",\n      error: \"\"\n    },\n    phone: {\n      value: \"\",\n      error: \"\"\n    },\n    payment: {\n      value: \"\",\n      error: \"\"\n    }\n  };\n  const validationStateSchema = {\n    firstName: {\n      required: true,\n      validator: {\n        regEx: /^[a-zA-Z]+$/,\n        error: \"Invalid first name format.\"\n      }\n    },\n    lastName: {\n      required: true,\n      validator: {\n        regEx: /^[a-zA-Z]+$/,\n        error: \"Invalid last name format.\"\n      }\n    },\n    address: {\n      required: true,\n      validator: {\n        error: \"Invalid address format.\"\n      }\n    },\n    city: {\n      required: true,\n      validator: {\n        error: \"Invalid last name format.\"\n      }\n    },\n    state: {\n      required: true,\n      validator: {\n        error: \"Invalid last name format.\"\n      }\n    },\n    zip: {\n      required: true,\n      validator: {\n        regEx: /^\\d{5}$|^\\d{5}-\\d{4}$/,\n        error: \"Invalid zip format, use like 12345.\"\n      }\n    },\n    email: {\n      required: true,\n      validator: {\n        regEx: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n        error: \"Invalid email format.\"\n      }\n    },\n    phone: {\n      required: true,\n      validator: {\n        regEx: /^\\+[0-9]?()[0-9](\\s|\\S)(\\d[0-9]{9})$/,\n        error: \"Invalid phone number format use like +2923432432432.\"\n      }\n    },\n    payment: {\n      required: false\n    }\n  };\n  const {\n    state,\n    handleOnChange,\n    disable\n  } = useForm(stateSchema, validationStateSchema);\n  const errorStyle = {\n    color: \"red\",\n    fontSize: \"13px\"\n  };\n  return __jsx(\"section\", {\n    className: \"checkout-area ptb-60\"\n  }, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-lg-12 col-md-12\"\n  })), __jsx(\"form\", {\n    onSubmit: handleOnSubmit\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-lg-6 col-md-12\"\n  }, __jsx(\"div\", {\n    className: \"billing-details\"\n  }, __jsx(\"h3\", {\n    className: \"title\"\n  }, \"Billing Details\"), __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-lg-6 col-md-6\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"First Name \", __jsx(\"span\", {\n    className: \"required\"\n  }, \"*\")), __jsx(\"input\", {\n    type: \"text\",\n    name: \"firstName\",\n    className: \"form-control\",\n    onChange: handleOnChange,\n    value: state.firstName.value\n  }), state.firstName.error && __jsx(\"p\", {\n    style: errorStyle\n  }, state.firstName.error))), __jsx(\"div\", {\n    className: \"col-lg-6 col-md-6\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"Last Name \", __jsx(\"span\", {\n    className: \"required\"\n  }, \"*\")), __jsx(\"input\", {\n    type: \"text\",\n    name: \"lastName\",\n    className: \"form-control\",\n    onChange: handleOnChange,\n    value: state.lastName.value\n  }), state.lastName.error && __jsx(\"p\", {\n    style: errorStyle\n  }, state.lastName.error))), __jsx(\"div\", {\n    className: \"col-lg-12 col-md-6\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"Address \", __jsx(\"span\", {\n    className: \"required\"\n  }, \"*\")), __jsx(\"input\", {\n    type: \"text\",\n    name: \"address\",\n    className: \"form-control\",\n    onChange: handleOnChange,\n    value: state.address.value\n  }), state.address.error && __jsx(\"p\", {\n    style: errorStyle\n  }, state.address.error))), __jsx(\"div\", {\n    className: \"col-lg-12 col-md-6\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"Town / City \", __jsx(\"span\", {\n    className: \"required\"\n  }, \"*\")), __jsx(\"input\", {\n    type: \"text\",\n    name: \"city\",\n    className: \"form-control\",\n    onChange: handleOnChange,\n    value: state.city.value\n  }), state.city.error && __jsx(\"p\", {\n    style: errorStyle\n  }, state.city.error))), __jsx(\"div\", {\n    className: \"col-lg-6 col-md-6\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"State / County \", __jsx(\"span\", {\n    className: \"required\"\n  }, \"*\")), __jsx(\"input\", {\n    type: \"text\",\n    name: \"state\",\n    className: \"form-control\",\n    onChange: handleOnChange,\n    value: state.state.value\n  }), state.state.error && __jsx(\"p\", {\n    style: errorStyle\n  }, state.state.error))), __jsx(\"div\", {\n    className: \"col-lg-6 col-md-6\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"Postcode / Zip \", __jsx(\"span\", {\n    className: \"required\"\n  }, \"*\")), __jsx(\"input\", {\n    type: \"text\",\n    name: \"zip\",\n    className: \"form-control\",\n    onChange: handleOnChange,\n    value: state.zip.value\n  }), state.zip.error && __jsx(\"p\", {\n    style: errorStyle\n  }, state.zip.error))), __jsx(\"div\", {\n    className: \"col-lg-6 col-md-6\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"Email Address \", __jsx(\"span\", {\n    className: \"required\"\n  }, \"*\")), __jsx(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    className: \"form-control\",\n    onChange: handleOnChange,\n    value: state.email.value\n  }), state.email.error && __jsx(\"p\", {\n    style: errorStyle\n  }, state.email.error))), __jsx(\"div\", {\n    className: \"col-lg-6 col-md-6\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"Phone \", __jsx(\"span\", {\n    className: \"required\"\n  }, \"*\")), __jsx(\"input\", {\n    type: \"text\",\n    name: \"phone\",\n    className: \"form-control\",\n    onChange: handleOnChange,\n    value: state.phone.value\n  }), state.phone.error && __jsx(\"p\", {\n    style: errorStyle\n  }, state.phone.error)))))), __jsx(\"div\", {\n    className: \"col-lg-6 col-md-12\"\n  }, __jsx(\"div\", {\n    className: \"order-details\"\n  }, __jsx(\"h3\", {\n    className: \"title\"\n  }, \"Your Order\"), __jsx(OrderSummary, null), __jsx(\"br\", null), __jsx(\"label\", {\n    for: \"cars\"\n  }, \"Choose A Payment Option:\"), __jsx(\"select\", {\n    id: \"payment\",\n    name: \"payment\",\n    onChange: handleOnChange,\n    value: state.payment.value,\n    className: \"select-css\"\n  }, __jsx(\"option\", {\n    value: \"Select\"\n  }, \"Please Select A Payment Option\"), __jsx(\"option\", {\n    value: \"cashapp\"\n  }, \"Cashapp \"), __jsx(\"option\", {\n    value: \"Zelle\"\n  }, \"Zelle\"), __jsx(\"option\", {\n    value: \"Apple Pay\"\n  }, \"Apple Pay\"), __jsx(\"option\", {\n    value: \"Bitcoin\"\n  }, \"Bitcoin\")), __jsx(\"div\", {\n    style: {\n      color: \"red\"\n    }\n  }), __jsx(\"div\", {\n    style: {\n      color: \"green\"\n    }\n  }, \"Payment button only works when all fields in the form marked with \", __jsx(\"span\", {\n    style: {\n      color: \"red\"\n    }\n  }, \"*\"), \" are filled\")), __jsx(\"br\", null), __jsx(\"button\", {\n    style: {\n      color: \"gold\",\n      borderRadius: \"10%\"\n    },\n    type: \"submit\",\n    disabled: disable,\n    className: `btn btn-success`\n  }, \"Send Payment Request\"))))));\n}\n\nconst mapStateToProps = state => {\n  return {\n    products: state.addedItems,\n    total: state.total,\n    shipping: state.shipping\n  };\n};\n\nexport default connect(mapStateToProps)(CheckoutForm);","map":{"version":3,"sources":["C:/Users/HP eliteworkstation/Desktop/lambo/novine-react/components/checkout/CheckoutForm.js"],"names":["React","axios","Router","Link","connect","OrderSummary","useForm","FontAwesomeIcon","faBitcoin","toast","resetCart","CheckoutForm","total","shipping","products","handleOnSubmit","e","preventDefault","data","firstName","state","value","lastName","address","city","zip","email","phone","payment","formData","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","method","url","then","response","setTimeout","push","redirect","window","open","totalAmount","toFixed","stateSchema","error","validationStateSchema","required","validator","regEx","handleOnChange","disable","errorStyle","color","fontSize","borderRadius","mapStateToProps","addedItems"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\n\nimport Router from \"next/router\";\nimport Link from \"next/link\";\nimport { connect } from \"react-redux\";\nimport OrderSummary from \"./OrderSummary\";\nimport useForm from \"./userForm\";\n// get our fontawesome imports\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBitcoin } from \"@fortawesome/free-brands-svg-icons\";\n\nimport { toast } from \"react-toastify\";\nimport { resetCart } from \"../../store/actions/actions\";\n\nfunction CheckoutForm({ total, shipping, products }) {\n  function handleOnSubmit(e) {\n    e.preventDefault();\n    let data = {\n      firstName: state.firstName.value,\n      lastName: state.lastName.value,\n      address: state.address.value,\n      city: state.city.value,\n      state: state.state.value,\n      zip: state.zip.value,\n      email: state.email.value,\n      phone: state.phone.value,\n      payment: state.payment.value,\n    };\n    let formData = [data, products];\n    if (payment==\"\"){\n      toast.success(\"Please Select A Payment Method\", {\n        position: \"top-center\",\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n      });\n      \n    }\n    else{};\n    axios({\n      method: \"POST\",\n      url: \"/api/payment\",\n      data: formData,\n    }).then((response) => {\n      if (response.data === \"success\") {\n        toast.success(\"Order has been Initiated\", {\n          position: \"top-center\",\n          autoClose: 4000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n        });\n        resetCart();\n\n        setTimeout(function () {\n          Router.push(\"/thankyou\");\n        }, 4000);\n      } else if (response.data === \"badddd\") {\n        toast.success(\n          \"An Error Occurred Please Retry: Did you use a valid email?\",\n          {\n            position: \"top-center\",\n            autoClose: 4000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n          }\n        );\n      }\n    });\n  }\n\n  function redirect(url) {\n    if (url)\n      return window.open(\n        url,\n        \"_blank\",\n        \"toolbar=yes,scrollbars=yes,resizable=yes,top=500,left=500,width=400,height=700\"\n      );\n  }\n\n  let totalAmount = (total + shipping).toFixed(2);\n\n  const stateSchema = {\n    firstName: { value: \"\", error: \"\" },\n    lastName: { value: \"\", error: \"\" },\n    address: { value: \"\", error: \"\" },\n    city: { value: \"\", error: \"\" },\n    state: { value: \"\", error: \"\" },\n    zip: { value: \"\", error: \"\" },\n    email: { value: \"\", error: \"\" },\n    phone: { value: \"\", error: \"\" },\n    payment: { value: \"\", error: \"\" },\n  };\n\n  const validationStateSchema = {\n    firstName: {\n      required: true,\n      validator: {\n        regEx: /^[a-zA-Z]+$/,\n        error: \"Invalid first name format.\",\n      },\n    },\n\n    lastName: {\n      required: true,\n      validator: {\n        regEx: /^[a-zA-Z]+$/,\n        error: \"Invalid last name format.\",\n      },\n    },\n\n    address: {\n      required: true,\n      validator: {\n        error: \"Invalid address format.\",\n      },\n    },\n\n    city: {\n      required: true,\n      validator: {\n        error: \"Invalid last name format.\",\n      },\n    },\n\n    state: {\n      required: true,\n      validator: {\n        error: \"Invalid last name format.\",\n      },\n    },\n\n    zip: {\n      required: true,\n      validator: {\n        regEx: /^\\d{5}$|^\\d{5}-\\d{4}$/,\n        error: \"Invalid zip format, use like 12345.\",\n      },\n    },\n\n    email: {\n      required: true,\n      validator: {\n        regEx: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n        error: \"Invalid email format.\",\n      },\n    },\n\n    phone: {\n      required: true,\n      validator: {\n        regEx: /^\\+[0-9]?()[0-9](\\s|\\S)(\\d[0-9]{9})$/,\n        error: \"Invalid phone number format use like +2923432432432.\",\n      },\n    },\n\n    payment: {\n      required: false,\n    },\n  };\n\n  const { state, handleOnChange, disable } = useForm(\n    stateSchema,\n    validationStateSchema\n  );\n\n  const errorStyle = {\n    color: \"red\",\n    fontSize: \"13px\",\n  };\n\n  return (\n    <section className=\"checkout-area ptb-60\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-lg-12 col-md-12\"></div>\n        </div>\n\n        <form onSubmit={handleOnSubmit}>\n          <div className=\"row\">\n            <div className=\"col-lg-6 col-md-12\">\n              <div className=\"billing-details\">\n                <h3 className=\"title\">Billing Details</h3>\n\n                <div className=\"row\">\n                  <div className=\"col-lg-6 col-md-6\">\n                    <div className=\"form-group\">\n                      <label>\n                        First Name <span className=\"required\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"firstName\"\n                        className=\"form-control\"\n                        onChange={handleOnChange}\n                        value={state.firstName.value}\n                      />\n                      {state.firstName.error && (\n                        <p style={errorStyle}>{state.firstName.error}</p>\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-6 col-md-6\">\n                    <div className=\"form-group\">\n                      <label>\n                        Last Name <span className=\"required\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"lastName\"\n                        className=\"form-control\"\n                        onChange={handleOnChange}\n                        value={state.lastName.value}\n                      />\n                      {state.lastName.error && (\n                        <p style={errorStyle}>{state.lastName.error}</p>\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-12 col-md-6\">\n                    <div className=\"form-group\">\n                      <label>\n                        Address <span className=\"required\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"address\"\n                        className=\"form-control\"\n                        onChange={handleOnChange}\n                        value={state.address.value}\n                      />\n                      {state.address.error && (\n                        <p style={errorStyle}>{state.address.error}</p>\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-12 col-md-6\">\n                    <div className=\"form-group\">\n                      <label>\n                        Town / City <span className=\"required\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"city\"\n                        className=\"form-control\"\n                        onChange={handleOnChange}\n                        value={state.city.value}\n                      />\n                      {state.city.error && (\n                        <p style={errorStyle}>{state.city.error}</p>\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-6 col-md-6\">\n                    <div className=\"form-group\">\n                      <label>\n                        State / County <span className=\"required\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"state\"\n                        className=\"form-control\"\n                        onChange={handleOnChange}\n                        value={state.state.value}\n                      />\n                      {state.state.error && (\n                        <p style={errorStyle}>{state.state.error}</p>\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-6 col-md-6\">\n                    <div className=\"form-group\">\n                      <label>\n                        Postcode / Zip <span className=\"required\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"zip\"\n                        className=\"form-control\"\n                        onChange={handleOnChange}\n                        value={state.zip.value}\n                      />\n                      {state.zip.error && (\n                        <p style={errorStyle}>{state.zip.error}</p>\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-6 col-md-6\">\n                    <div className=\"form-group\">\n                      <label>\n                        Email Address <span className=\"required\">*</span>\n                      </label>\n                      <input\n                        type=\"email\"\n                        name=\"email\"\n                        className=\"form-control\"\n                        onChange={handleOnChange}\n                        value={state.email.value}\n                      />\n                      {state.email.error && (\n                        <p style={errorStyle}>{state.email.error}</p>\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-6 col-md-6\">\n                    <div className=\"form-group\">\n                      <label>\n                        Phone <span className=\"required\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"phone\"\n                        className=\"form-control\"\n                        onChange={handleOnChange}\n                        value={state.phone.value}\n                      />\n                      {state.phone.error && (\n                        <p style={errorStyle}>{state.phone.error}</p>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-lg-6 col-md-12\">\n              <div className=\"order-details\">\n                <h3 className=\"title\">Your Order</h3>\n\n                <OrderSummary />\n                <br />\n                <label for=\"cars\">Choose A Payment Option:</label>\n                <select\n                  id=\"payment\"\n                  name=\"payment\"\n                  onChange={handleOnChange}\n                  value={state.payment.value}\n                  className=\"select-css\"\n                >\n                  <option value=\"Select\">Please Select A Payment Option</option>\n                  <option value=\"cashapp\">Cashapp </option>\n                  <option value=\"Zelle\">Zelle</option>\n                  <option value=\"Apple Pay\">Apple Pay</option>\n                  <option value=\"Bitcoin\">Bitcoin</option>\n                </select>\n                <div style={{ color: \"red\" }}></div>\n                <div style={{ color: \"green\" }}>\n                  Payment button only works when all fields in the form marked\n                  with <span style={{ color: \"red\" }}>*</span> are filled\n                </div>\n              </div>\n              <br />\n\n              <button\n                style={{ color: \"gold\", borderRadius: \"10%\" }}\n                type=\"submit\"\n                disabled={disable}\n                className={`btn btn-success`}\n              >\n                Send Payment Request\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </section>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    products: state.addedItems,\n    total: state.total,\n    shipping: state.shipping,\n  };\n};\n\nexport default connect(mapStateToProps)(CheckoutForm);\n"]},"metadata":{},"sourceType":"module"}