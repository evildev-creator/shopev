{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useMemo } from 'react';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunkMiddleware from 'redux-thunk';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\n\nimport { products, semiAuth, revolver, ak, tactical, leverAction, derringer, ars, aks, boltAction, hunting, rftactical, selfdefense, rim, handAmmuni, rifleammuni, topSellers, riflescope, redDotscope, nightvision, binoculars, rangefinder, handgunsight, flash, weaponlights } from '../json-data/products';\nlet store;\nimport { ADD_TO_CART, REMOVE_ITEM, SUB_QUANTITY, ADD_QUANTITY, ADD_SHIPPING, ADD_QUANTITY_WITH_NUMBER, RESET_CART, ADD_TO_COMPARE, REMOVE_ITEM_FROM_COMPARE } from '../actions/action-types/action-names';\nconst initialState = {\n  products: products,\n  semiAuth: semiAuth,\n  revolver: revolver,\n  ak: ak,\n  tactical: tactical,\n  leverAction: leverAction,\n  derringer: derringer,\n  ars: ars,\n  aks: aks,\n  boltAction: boltAction,\n  hunting: hunting,\n  rftactical: rftactical,\n  selfdefense: selfdefense,\n  rim: rim,\n  handAmmuni: handAmmuni,\n  rifleammuni: rifleammuni,\n  topSellers: topSellers,\n  riflescope: riflescope,\n  redDotscope: redDotscope,\n  nightvision: nightvision,\n  binoculars: binoculars,\n  rangefinder: rangefinder,\n  handgunsight: handgunsight,\n  flash: flash,\n  weaponlights: weaponlights,\n  addedItems: [],\n  addedItemsToCompare: [],\n  total: 0,\n  shipping: 0\n};\nexport const reducers = (state = initialState, action) => {\n  if (action.type === ADD_TO_CART) {\n    let addedItem = state.products.find(item => item.id === action.id) || state.semiAuth.find(item => item.id === action.id) || state.revolver.find(item => item.id === action.id) || state.ak.find(item => item.id === action.id) || state.tactical.find(item => item.id === action.id) || state.leverAction.find(item => item.id === action.id) || state.derringer.find(item => item.id === action.id) || state.ars.find(item => item.id === action.id) || state.aks.find(item => item.id === action.id) || state.boltAction.find(item => item.id === action.id) || state.hunting.find(item => item.id === action.id) || state.rftactical.find(item => item.id === action.id) || state.selfdefense.find(item => item.id === action.id) || state.rim.find(item => item.id === action.id) || state.handAmmuni.find(item => item.id === action.id) || state.rifleammuni.find(item => item.id === action.id) || state.topSellers.find(item => item.id === action.id) || state.riflescope.find(item => item.id === action.id) || state.redDotscope.find(item => item.id === action.id) || state.nightvision.find(item => item.id === action.id) || state.binoculars.find(item => item.id === action.id) || state.rangefinder.find(item => item.id === action.id) || state.handgunsight.find(item => item.id === action.id) || state.flash.find(item => item.id === action.id) || state.weaponlights.find(item => item.id === action.id); //check if the action id exists in the addedItems\n\n    let existed_item = state.addedItems.find(item => action.id === item.id);\n\n    if (existed_item) {\n      addedItem.quantity += 1;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        total: state.total + addedItem.price\n      });\n    } else {\n      addedItem.quantity = 1; //calculating the total\n\n      let newTotal = state.total + addedItem.price;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addedItems: [...state.addedItems, addedItem],\n        total: newTotal\n      });\n    }\n  }\n\n  if (action.type === ADD_TO_COMPARE) {\n    let addedItemToCompare = state.products.find(item => item.id === action.id) || state.semiAuth.find(item => item.id === action.id) || state.revolver.find(item => item.id === action.id) || state.ak.find(item => item.id === action.id) || state.tactical.find(item => item.id === action.id) || state.leverAction.find(item => item.id === action.id) || state.derringer.find(item => item.id === action.id) || state.ars.find(item => item.id === action.id) || state.aks.find(item => item.id === action.id) || state.boltAction.find(item => item.id === action.id) || state.hunting.find(item => item.id === action.id) || state.rftactical.find(item => item.id === action.id) || state.selfdefense.find(item => item.id === action.id) || state.rim.find(item => item.id === action.id) || state.handAmmuni.find(item => item.id === action.id) || state.rifleammuni.find(item => item.id === action.id) || state.topSellers.find(item => item.id === action.id) || state.riflescope.find(item => item.id === action.id) || state.redDotscope.find(item => item.id === action.id) || state.nightvision.find(item => item.id === action.id) || state.binoculars.find(item => item.id === action.id) || state.rangefinder.find(item => item.id === action.id) || state.handgunsight.find(item => item.id === action.id) || state.flash.find(item => item.id === action.id) || state.weaponlights.find(item => item.id === action.id);\n    addedItemToCompare.quantity = 1;\n    return _objectSpread(_objectSpread({}, state), {}, {\n      addedItemsToCompare: [...state.addedItemsToCompare, addedItemToCompare]\n    });\n  }\n\n  if (action.type === ADD_QUANTITY_WITH_NUMBER) {\n    let addedItem = state.products.find(item => item.id === action.id) || state.semiAuth.find(item => item.id === action.id) || state.revolver.find(item => item.id === action.id) || state.ak.find(item => item.id === action.id) || state.tactical.find(item => item.id === action.id) || state.leverAction.find(item => item.id === action.id) || state.derringer.find(item => item.id === action.id) || state.ars.find(item => item.id === action.id) || state.aks.find(item => item.id === action.id) || state.boltAction.find(item => item.id === action.id) || state.hunting.find(item => item.id === action.id) || state.rftactical.find(item => item.id === action.id) || state.selfdefense.find(item => item.id === action.id) || state.rim.find(item => item.id === action.id) || state.handAmmuni.find(item => item.id === action.id) || state.rifleammuni.find(item => item.id === action.id) || state.topSellers.find(item => item.id === action.id) || state.riflescope.find(item => item.id === action.id) || state.redDotscope.find(item => item.id === action.id) || state.nightvision.find(item => item.id === action.id) || state.binoculars.find(item => item.id === action.id) || state.rangefinder.find(item => item.id === action.id) || state.handgunsight.find(item => item.id === action.id) || state.flash.find(item => item.id === action.id) || state.weaponlights.find(item => item.id === action.id); //check if the action id exists in the addedItems\n\n    let existed_item = state.addedItems.find(item => action.id === item.id);\n\n    if (existed_item) {\n      addedItem.quantity += action.qty;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        total: state.total + addedItem.price * action.qty\n      });\n    } else {\n      addedItem.quantity = action.qty; //calculating the total\n\n      let newTotal = state.total + addedItem.price * action.qty;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addedItems: [...state.addedItems, addedItem],\n        total: newTotal\n      });\n    }\n  }\n\n  if (action.type === REMOVE_ITEM) {\n    let itemToRemove = state.addedItems.find(item => action.id === item.id);\n    let new_items = state.addedItems.filter(item => action.id !== item.id); //calculating the total\n\n    let newTotal = state.total - itemToRemove.price * itemToRemove.quantity;\n    return _objectSpread(_objectSpread({}, state), {}, {\n      addedItems: new_items,\n      total: newTotal\n    });\n  }\n\n  if (action.type === REMOVE_ITEM_FROM_COMPARE) {\n    let new_items = state.addedItemsToCompare.filter(item => action.id !== item.id);\n    return _objectSpread(_objectSpread({}, state), {}, {\n      addedItemsToCompare: new_items\n    });\n  }\n\n  if (action.type === ADD_QUANTITY) {\n    let addedItem = state.products.find(item => item.id === action.id);\n    addedItem.quantity += 1;\n    let newTotal = state.total + addedItem.price;\n    return _objectSpread(_objectSpread({}, state), {}, {\n      total: newTotal\n    });\n  }\n\n  if (action.type === SUB_QUANTITY) {\n    let addedItem = state.products.find(item => item.id === action.id) || state.semiAuth.find(item => item.id === action.id) || state.revolver.find(item => item.id === action.id) || state.ak.find(item => item.id === action.id) || state.tactical.find(item => item.id === action.id) || state.leverAction.find(item => item.id === action.id) || state.derringer.find(item => item.id === action.id) || state.ars.find(item => item.id === action.id) || state.aks.find(item => item.id === action.id) || state.boltAction.find(item => item.id === action.id) || state.hunting.find(item => item.id === action.id) || state.rftactical.find(item => item.id === action.id) || state.selfdefense.find(item => item.id === action.id) || state.rim.find(item => item.id === action.id) || state.handAmmuni.find(item => item.id === action.id) || state.rifleammuni.find(item => item.id === action.id) || state.topSellers.find(item => item.id === action.id) || state.riflescope.find(item => item.id === action.id) || state.redDotscope.find(item => item.id === action.id) || state.nightvision.find(item => item.id === action.id) || state.binoculars.find(item => item.id === action.id) || state.rangefinder.find(item => item.id === action.id) || state.handgunsight.find(item => item.id === action.id) || state.flash.find(item => item.id === action.id) || state.weaponlights.find(item => item.id === action.id); //if the qt == 0 then it should be removed\n\n    if (addedItem.quantity === 1) {\n      let new_items = state.addedItems.filter(item => item.id !== action.id);\n      let newTotal = state.total - addedItem.price;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addedItems: new_items,\n        total: newTotal\n      });\n    } else {\n      addedItem.quantity -= 1;\n      let newTotal = state.total - addedItem.price;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        total: newTotal\n      });\n    }\n  }\n\n  if (action.type === ADD_SHIPPING) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      shipping: state.shipping += 6\n    });\n  }\n\n  if (action.type === 'SUB_SHIPPING') {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      shipping: state.shipping -= 6\n    });\n  }\n\n  if (action.type === RESET_CART) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      addedItems: [],\n      total: 0,\n      shipping: 0\n    });\n  } else {\n    return state;\n  }\n};\nconst persistConfig = {\n  key: 'primary',\n  storage\n};\nconst persistedReducer = persistReducer(persistConfig, reducers);\n\nfunction makeStore(initialState) {\n  return createStore(persistedReducer, initialState, composeWithDevTools(applyMiddleware()));\n}\n\nexport const initializeStore = preloadedState => {\n  var _store2;\n\n  let _store = (_store2 = store) !== null && _store2 !== void 0 ? _store2 : makeStore(preloadedState); // After navigating to a page with an initial Redux state, merge that state\n  // with the current state in the store, and create a new store\n\n\n  if (preloadedState && store) {\n    _store = makeStore(_objectSpread(_objectSpread({}, store.getState()), preloadedState)); // Reset the current store\n\n    store = undefined;\n  } // For SSG and SSR always create a new store\n\n\n  if (true) return _store; // Create the store once in the client\n\n  if (!store) store = _store;\n  return _store;\n};\nexport function useStore(initialState) {\n  const store = useMemo(() => initializeStore(initialState), [initialState]);\n  return store;\n}","map":{"version":3,"sources":["C:/Users/HP eliteworkstation/Desktop/lambo/strapsessions.com/store/reducers/reducers.js"],"names":["useMemo","createStore","applyMiddleware","composeWithDevTools","thunkMiddleware","persistStore","persistReducer","storage","products","semiAuth","revolver","ak","tactical","leverAction","derringer","ars","aks","boltAction","hunting","rftactical","selfdefense","rim","handAmmuni","rifleammuni","topSellers","riflescope","redDotscope","nightvision","binoculars","rangefinder","handgunsight","flash","weaponlights","store","ADD_TO_CART","REMOVE_ITEM","SUB_QUANTITY","ADD_QUANTITY","ADD_SHIPPING","ADD_QUANTITY_WITH_NUMBER","RESET_CART","ADD_TO_COMPARE","REMOVE_ITEM_FROM_COMPARE","initialState","addedItems","addedItemsToCompare","total","shipping","reducers","state","action","type","addedItem","find","item","id","existed_item","quantity","price","newTotal","addedItemToCompare","qty","itemToRemove","new_items","filter","persistConfig","key","persistedReducer","makeStore","initializeStore","preloadedState","_store","getState","undefined","useStore"],"mappings":"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","sourcesContent":["import { useMemo } from 'react';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\r\n \r\n\r\nimport {\r\n    products, \r\n    semiAuth, \r\n    revolver, \r\n    ak, \r\n    tactical, \r\n    leverAction, \r\n    derringer,\r\n    ars,\r\n    aks,\r\n    boltAction,\r\n    hunting,\r\n    rftactical,\r\n    selfdefense,\r\n    rim,\r\n    handAmmuni,\r\n    rifleammuni,\r\n    topSellers,\r\n    riflescope,\r\nredDotscope,\r\nnightvision,\r\nbinoculars,\r\nrangefinder,\r\nhandgunsight,\r\nflash,\r\nweaponlights\r\n} from '../json-data/products';\r\n\r\nlet store\r\n\r\nimport { \r\n    ADD_TO_CART,\r\n    REMOVE_ITEM,\r\n    SUB_QUANTITY,\r\n    ADD_QUANTITY, \r\n    ADD_SHIPPING,\r\n    ADD_QUANTITY_WITH_NUMBER,\r\n    RESET_CART,\r\n    ADD_TO_COMPARE,\r\n    REMOVE_ITEM_FROM_COMPARE\r\n} from '../actions/action-types/action-names'\r\n\r\nconst initialState = {\r\n    products: products,\r\n    semiAuth: semiAuth,\r\n    revolver: revolver,\r\n    ak: ak,\r\n    tactical: tactical,\r\n    leverAction: leverAction,\r\n    derringer: derringer,\r\n    ars: ars,\r\n    aks: aks,\r\n    boltAction: boltAction,\r\n    hunting: hunting,\r\n    rftactical: rftactical,\r\n    selfdefense:selfdefense,\r\n    rim:rim,\r\n    handAmmuni:handAmmuni,\r\n    rifleammuni: rifleammuni,\r\n    topSellers: topSellers,\r\n    riflescope: riflescope,\r\nredDotscope: redDotscope,\r\nnightvision: nightvision,\r\nbinoculars: binoculars,\r\nrangefinder: rangefinder,\r\nhandgunsight: handgunsight,\r\nflash: flash,\r\nweaponlights: weaponlights,\r\n    addedItems:[],\r\n    addedItemsToCompare:[],\r\n    total: 0,\r\n    shipping: 0\r\n}\r\n\r\nexport const reducers = (state = initialState, action) => {\r\n   \r\n    if(action.type === ADD_TO_CART){\r\n        let addedItem = state.products.find(item => item.id === action.id) \r\n        || state.semiAuth.find(item => item.id === action.id)\r\n        || state.revolver.find(item => item.id === action.id)\r\n        || state.ak.find(item => item.id === action.id)\r\n        || state.tactical.find(item => item.id === action.id)\r\n        || state.leverAction.find(item => item.id === action.id)\r\n        || state.derringer.find(item => item.id === action.id)\r\n        || state.ars.find(item => item.id === action.id)\r\n        || state.aks.find(item => item.id === action.id)\r\n        || state.boltAction.find(item => item.id === action.id)\r\n        || state.hunting.find(item => item.id === action.id)\r\n        || state.rftactical.find(item => item.id === action.id)\r\n        || state.selfdefense.find(item => item.id === action.id)\r\n        || state.rim.find(item => item.id === action.id)\r\n        || state.handAmmuni.find(item => item.id === action.id) \r\n        || state.rifleammuni.find(item => item.id === action.id)\r\n        || state.topSellers.find(item => item.id === action.id)\r\n        || state.riflescope.find(item => item.id === action.id)\r\n        || state.redDotscope.find(item => item.id === action.id)\r\n        || state.nightvision.find(item => item.id === action.id)\r\n        || state.binoculars.find(item => item.id === action.id)\r\n        || state.rangefinder.find(item => item.id === action.id)\r\n        || state.handgunsight.find(item => item.id === action.id)\r\n        || state.flash.find(item => item.id === action.id)\r\n        || state.weaponlights.find(item => item.id === action.id)\r\n        //check if the action id exists in the addedItems\r\n        let existed_item = state.addedItems.find(item => action.id === item.id)\r\n        if(existed_item){\r\n            addedItem.quantity += 1 \r\n            return {\r\n                ...state,\r\n                total: state.total + addedItem.price \r\n            }\r\n        } else {\r\n            addedItem.quantity = 1;\r\n            //calculating the total\r\n            let newTotal = state.total + addedItem.price \r\n            \r\n            return {\r\n                ...state,\r\n                addedItems: [...state.addedItems, addedItem],\r\n                total : newTotal\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    if(action.type === ADD_TO_COMPARE){\r\n        let addedItemToCompare = state.products.find(item => item.id === action.id)\r\n        || state.semiAuth.find(item => item.id === action.id)\r\n        || state.revolver.find(item => item.id === action.id)\r\n        || state.ak.find(item => item.id === action.id)\r\n        || state.tactical.find(item => item.id === action.id)\r\n        || state.leverAction.find(item => item.id === action.id)\r\n        || state.derringer.find(item => item.id === action.id)\r\n        || state.ars.find(item => item.id === action.id)\r\n        || state.aks.find(item => item.id === action.id)\r\n        || state.boltAction.find(item => item.id === action.id)\r\n        || state.hunting.find(item => item.id === action.id)\r\n        || state.rftactical.find(item => item.id === action.id) \r\n        || state.selfdefense.find(item => item.id === action.id) \r\n        || state.rim.find(item => item.id === action.id)\r\n        || state.handAmmuni.find(item => item.id === action.id) \r\n        || state.rifleammuni.find(item => item.id === action.id)\r\n        || state.topSellers.find(item => item.id === action.id)  \r\n        || state.riflescope.find(item => item.id === action.id)\r\n        || state.redDotscope.find(item => item.id === action.id)\r\n        || state.nightvision.find(item => item.id === action.id)\r\n        || state.binoculars.find(item => item.id === action.id)\r\n        || state.rangefinder.find(item => item.id === action.id)\r\n        || state.handgunsight.find(item => item.id === action.id)\r\n        || state.flash.find(item => item.id === action.id)\r\n        || state.weaponlights.find(item => item.id === action.id)\r\n\r\n        \r\n        addedItemToCompare.quantity = 1;\r\n        \r\n        return {\r\n            ...state,\r\n            addedItemsToCompare: [...state.addedItemsToCompare, addedItemToCompare]\r\n        }\r\n    }\r\n\r\n    if(action.type === ADD_QUANTITY_WITH_NUMBER){\r\n        let addedItem = state.products.find(item => item.id === action.id)\r\n        || state.semiAuth.find(item => item.id === action.id)\r\n        || state.revolver.find(item => item.id === action.id)\r\n        || state.ak.find(item => item.id === action.id)\r\n        || state.tactical.find(item => item.id === action.id)\r\n        || state.leverAction.find(item => item.id === action.id)\r\n        || state.derringer.find(item => item.id === action.id)\r\n        || state.ars.find(item => item.id === action.id)\r\n        || state.aks.find(item => item.id === action.id)\r\n        || state.boltAction.find(item => item.id === action.id)\r\n        || state.hunting.find(item => item.id === action.id)\r\n        || state.rftactical.find(item => item.id === action.id) \r\n        || state.selfdefense.find(item => item.id === action.id) \r\n        || state.rim.find(item => item.id === action.id)\r\n        || state.handAmmuni.find(item => item.id === action.id) \r\n        || state.rifleammuni.find(item => item.id === action.id)\r\n        || state.topSellers.find(item => item.id === action.id)\r\n        || state.riflescope.find(item => item.id === action.id)\r\n        || state.redDotscope.find(item => item.id === action.id)\r\n        || state.nightvision.find(item => item.id === action.id)\r\n        || state.binoculars.find(item => item.id === action.id)\r\n        || state.rangefinder.find(item => item.id === action.id)\r\n        || state.handgunsight.find(item => item.id === action.id)\r\n        || state.flash.find(item => item.id === action.id)\r\n        || state.weaponlights.find(item => item.id === action.id)\r\n        //check if the action id exists in the addedItems\r\n        let existed_item = state.addedItems.find(item=> action.id === item.id)\r\n        if(existed_item)\r\n        {\r\n            addedItem.quantity += action.qty\r\n            return {\r\n                ...state,\r\n                total: state.total + addedItem.price * action.qty\r\n            }\r\n        } else {\r\n            addedItem.quantity = action.qty;\r\n            //calculating the total\r\n            let newTotal = state.total + addedItem.price * action.qty\r\n            \r\n            return {\r\n                ...state,\r\n                addedItems: [...state.addedItems, addedItem],\r\n                total : newTotal\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    if(action.type === REMOVE_ITEM){\r\n        let itemToRemove = state.addedItems.find(item=> action.id === item.id)\r\n        let new_items = state.addedItems.filter(item=> action.id !== item.id)\r\n        \r\n        //calculating the total\r\n        let newTotal = state.total - (itemToRemove.price * itemToRemove.quantity );\r\n\r\n        return {\r\n            ...state,\r\n            addedItems: new_items,\r\n            total: newTotal\r\n        }\r\n    }\r\n\r\n    if(action.type === REMOVE_ITEM_FROM_COMPARE){\r\n        let new_items = state.addedItemsToCompare.filter(item=> action.id !== item.id)\r\n        \r\n        return {\r\n            ...state,\r\n            addedItemsToCompare: new_items\r\n        }\r\n    }\r\n\r\n    if(action.type === ADD_QUANTITY){\r\n        let addedItem = state.products.find(item=> item.id === action.id)\r\n        addedItem.quantity += 1 \r\n        let newTotal = state.total + addedItem.price\r\n        return {\r\n            ...state,\r\n            total: newTotal\r\n        }\r\n    }\r\n\r\n    if(action.type === SUB_QUANTITY){  \r\n        let addedItem = state.products.find(item=> item.id === action.id) \r\n        || state.semiAuth.find(item => item.id === action.id)\r\n        || state.revolver.find(item => item.id === action.id)\r\n        || state.ak.find(item => item.id === action.id)\r\n        || state.tactical.find(item => item.id === action.id)\r\n        || state.leverAction.find(item => item.id === action.id)\r\n        || state.derringer.find(item => item.id === action.id)\r\n        || state.ars.find(item => item.id === action.id)\r\n        || state.aks.find(item => item.id === action.id)\r\n        || state.boltAction.find(item => item.id === action.id)\r\n        || state.hunting.find(item => item.id === action.id)\r\n        || state.rftactical.find(item => item.id === action.id) \r\n        || state.selfdefense.find(item => item.id === action.id) \r\n        || state.rim.find(item => item.id === action.id)\r\n        || state.handAmmuni.find(item => item.id === action.id) \r\n        || state.rifleammuni.find(item => item.id === action.id)\r\n        || state.topSellers.find(item => item.id === action.id)\r\n        || state.riflescope.find(item => item.id === action.id)\r\n        || state.redDotscope.find(item => item.id === action.id)\r\n        || state.nightvision.find(item => item.id === action.id)\r\n        || state.binoculars.find(item => item.id === action.id)\r\n        || state.rangefinder.find(item => item.id === action.id)\r\n        || state.handgunsight.find(item => item.id === action.id)\r\n        || state.flash.find(item => item.id === action.id)\r\n        || state.weaponlights.find(item => item.id === action.id)\r\n        //if the qt == 0 then it should be removed\r\n        if(addedItem.quantity === 1){\r\n            let new_items = state.addedItems.filter(item=>item.id !== action.id)\r\n            let newTotal = state.total - addedItem.price\r\n            return {\r\n                ...state,\r\n                addedItems: new_items,\r\n                total: newTotal\r\n            }\r\n        } else {\r\n            addedItem.quantity -= 1\r\n            let newTotal = state.total - addedItem.price\r\n            return {\r\n                ...state,\r\n                total: newTotal\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    if(action.type === ADD_SHIPPING){\r\n        return {\r\n            ...state,\r\n            shipping: state.shipping += 6\r\n        }\r\n    }\r\n\r\n    if(action.type === 'SUB_SHIPPING'){\r\n        return {\r\n            ...state,\r\n            shipping: state.shipping -= 6\r\n        }\r\n    }\r\n\r\n    if(action.type === RESET_CART){\r\n        return {\r\n            ...state,\r\n            addedItems: [],\r\n            total: 0,\r\n            shipping: 0\r\n        }\r\n    }\r\n    \r\n    else {\r\n        return state\r\n    }\r\n}\r\n\r\n\r\n\r\nconst persistConfig = {\r\n    key: 'primary',\r\n    storage,\r\n}\r\n  \r\n  const persistedReducer = persistReducer(persistConfig, reducers)\r\n  \r\n  function makeStore(initialState) {\r\n    return createStore(\r\n      persistedReducer,\r\n      initialState,\r\n      composeWithDevTools(applyMiddleware())\r\n    )\r\n  }\r\n  \r\n  export const initializeStore = (preloadedState) => {\r\n    let _store = store ?? makeStore(preloadedState)\r\n  \r\n    // After navigating to a page with an initial Redux state, merge that state\r\n    // with the current state in the store, and create a new store\r\n    if (preloadedState && store) {\r\n      _store = makeStore({\r\n        ...store.getState(),\r\n        ...preloadedState,\r\n      })\r\n      // Reset the current store\r\n      store = undefined\r\n    }\r\n  \r\n    // For SSG and SSR always create a new store\r\n    if (typeof window === 'undefined') return _store\r\n    // Create the store once in the client\r\n    if (!store) store = _store\r\n  \r\n    return _store\r\n  }\r\n  \r\n  export function useStore(initialState) {\r\n    const store = useMemo(() => initializeStore(initialState), [initialState])\r\n    return store\r\n  }"]},"metadata":{},"sourceType":"module"}